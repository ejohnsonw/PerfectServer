#set ($language="Swift")
#set ($description="SQLite PersistenceManager: an Adapter to deal with persistence layer")
#set ($author="Evol Johnson")
#set ($overwrite="true")
#set ($enabled="true")
#set ($filep="PersistenceManagerSQLite.swift")
#set ($filename="${outputDir}/${filep}")

import PerfectLib
class PersistenceManagerSQLite {
	static let sharedInstance = PersistenceManagerSQLite()
	
    var db: SQLite!
    #foreach( $entity in $entities)
    var ${entity.getVariableName()}Repository :  ${entity.name}Repository! 
	#end
    init() {
    	// Create our SQLite database.
    	do {
        	db = try SQLite(Config.dbPath) 
#foreach( $entity in $entities)
			
			//Variables for ${entity.name}
			${entity.getVariableName()}Repository = ${entity.name}Repository(db:self.db);
			try ${entity.getVariableName()}Repository.createTable()
#end
    	} catch (let e){
        	print("Failure creating database at " + Config.dbPath)
        	print(e)
    	}
    }
}
